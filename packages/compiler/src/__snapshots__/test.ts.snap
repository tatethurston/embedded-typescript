// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler compile(template-1.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\nexport interface Props {\\n  users: { name: string }[];\\n}\\n---\\n";
  props.users.forEach(function (user) {
    result += "Name: ";
    result += user.name;
    result += "\\n";
  });
  return result;
}
"
`;

exports[`compiler compile(template-2.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\nexport interface Props {\\n  name: string;\\n  needsPasswordReset: boolean;\\n}\\n---\\nHello ";
  result += props.name;
  result += "!\\n";
  if (props.needsPasswordReset) {
    result += "You need to update your password.\\n";
  }
  result += "\\n";
  return result;
}
"
`;

exports[`compiler compile(template-3.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\ntype AccountType = 'user' | 'admin' | 'enterprise';\\n\\nexport interface Props {\\n  name: string;\\n  type: AccountType;\\n}\\n---\\nHello ";
  result += props.name;
  result += ", you are ";
  switch (props.type) {
    case "user": {
      result += "a user!\\n";
      break;
    }
    case "admin": {
      result += "an admin!\\n";
      break;
    }
    case "enterprise": {
      result += "an enterprise user!\\n";
      break;
    }
    default: {
      const exhaust: never = props.type;
      return exhaust;
    }
  }
  return result;
}
"
`;

exports[`compiler compile(template-4.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\nimport { uppercase } from './helpers';\\n\\nexport interface Props {\\n  name: string;\\n}\\n---\\nHello ";
  result += uppercase(props.name);
  result += "!\\n";
  return result;
}
"
`;

exports[`compiler compile(template-5.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\ntype AccountType = 'user' | 'admin' | 'enterprise';\\n\\nexport interface Props {\\n  name: string;\\n  type: AccountType;\\n}\\n---\\n";
  let userMessage;
  switch (props.type) {
    case "user": {
      userMessage = "a user!";
      break;
    }
    case "admin": {
      userMessage = "an admin!";
      break;
    }
    case "enterprise": {
      userMessage = "an enterprise user!";
      break;
    }
    default: {
      const exhaust: never = props.type;
      return exhaust;
    }
  }
  result += "Hello ";
  result += props.name;
  result += ", you are ";
  result += userMessage;
  result += "\\n";
  return result;
}
"
`;

exports[`compiler compile(template-6.ets) 1`] = `
{
  "context": "    |
13  | %>
    | ^
    | |
...
",
  "error": "Unexpected closing tag '%>'",
  "position": {
    "end": {
      "column": 2,
      "line": 13,
    },
    "start": {
      "column": 1,
      "line": 13,
    },
  },
}
`;

exports[`compiler compile(user-partial.ets) 1`] = `
"export default function (props: unknown): string {
  let result = "";
  result +=
    "\\nexport interface Props {\\n  name: string;\\n  email: string;\\n  phone: string;\\n}\\n---\\nName: ";
  result += props.name;
  result += "\\nEmail: ";
  result += props.email;
  result += "\\nPhone: ";
  result += props.phone;
  result += "\\n";
  return result;
}
"
`;
